{
    "swagger": "2.0",
    "info": {
        "version": "0.1.0",
        "title": "Salony API",
        "description": "Salony API documentation"
    },
    "host": "staging.salony.com",
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "V1",
            "description": "First version of API"
        },
        {
            "name": "Implemented"
        },
        {
            "name": "Salons"
        }
    ],
    "paths": {
        "/v1/user/verify_phone_code": {
            "post": {
                "tags": [
                    "V1",
                    "User",
                    "Session",
                    "Implemented"
                ],
                "description": "Verify phone code sended received from reset_password SMS \n",
                "parameters": [
                    {
                        "name": "code",
                        "in": "formData",
                        "required": true,
                        "description": "Code received from SMS",
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Code successfuly verified\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user_phone": {
                                    "type": "string"
                                },
                                "user_auth_token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/register": {
            "post": {
                "tags": [
                    "V1",
                    "User",
                    "Implemented",
                    "Session"
                ],
                "description": "Post `User` object.\n",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "`User` object\n",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "user": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`User` is created.\n",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "post": {
                "tags": [
                    "V1",
                    "User",
                    "Session"
                ],
                "description": "Login `User` with phone and password.\n",
                "parameters": [
                    {
                        "name": "mobile_number",
                        "required": true,
                        "in": "formData",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "required": true,
                        "in": "formData",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/v1/user/reset_password": {
            "post": {
                "tags": [
                    "V1",
                    "User",
                    "Session"
                ],
                "description": "Send reset password request.\n",
                "parameters": [
                    {
                        "name": "mobile_number",
                        "required": true,
                        "in": "formData",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request sended successfuly.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "You should receive SMS with your new password\n"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/favorites": {
            "get": {
                "tags": [
                    "V1"
                ],
                "responses": {
                    "200": {
                        "description": "List of `Users`s favorites `Salon`s\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Salon"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "V1"
                ],
                "description": "Add `Salon` to `User` favorite list\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "`id` of `Salony`",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`Salony` succesfully added"
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/user/upcoming_appointments": {
            "get": {
                "tags": [
                    "V1"
                ],
                "responses": {
                    "200": {
                        "description": "List of `User`s upcoming `Appointment`s \nordered by created_at in DESC\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Appointment"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/user/past_appointments": {
            "get": {
                "tags": [
                    "V1"
                ],
                "responses": {
                    "200": {
                        "description": "List of `User`s past `Appointment`s\nordered by created_at in DESC\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Appointment"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/user/add_credit_card": {
            "post": {
                "tags": [
                    "V1"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "number": {
                                    "type": "string"
                                },
                                "expiration_year": {
                                    "type": "string"
                                },
                                "expiration_month": {
                                    "type": "string"
                                },
                                "security_code": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credit card successfully added",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/appointments/{id}": {
            "delete": {
                "tags": [
                    "V1"
                ],
                "description": "Cancel `User` `Appointment` \n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Appointment id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment successfuly deleted"
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/salons": {
            "get": {
                "tags": [
                    "V1",
                    "Salons",
                    "Implemented"
                ],
                "description": "List of `Salon`s.\nIf filters are passed then you will receive filtered\nlist of `Salon`s. You can pass pagination parameters via\n`page` and `per_page`. There are pagination headers.\n",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter[name_start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter[city_eq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter[services_category_name_eq]",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Filter by services category_name. You can use any category_name\nnot only from selector.\n",
                        "enum": [
                            "Threading",
                            "Tanning",
                            "Moroccan Bath",
                            "Eyelashes",
                            "Extensions",
                            "Tattoo",
                            "Henna",
                            "Massage",
                            "Waxing",
                            "Hair Cut",
                            "Hairdo",
                            "Blowout",
                            "Hair Color",
                            "Hair Treatment",
                            "Make Up",
                            "Nails",
                            "Facial"
                        ]
                    },
                    {
                        "name": "filter[neighbourhood_eq]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter[min_price_gteq]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter[min_price_lteq]",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of `Salon`s",
                        "headers": {
                            "Link": {
                                "type": "string",
                                "description": "Link to the next and last pages"
                            },
                            "Per-Page": {
                                "type": "integer",
                                "description": "Number of `Salon`s presented on page"
                            },
                            "Total": {
                                "type": "integer",
                                "description": "Total number of `Salon`s which matched the request"
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salons": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SalonJSON"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "V1",
                    "Implemented",
                    "Salons"
                ],
                "description": "Create a `Salon`.\n",
                "parameters": [
                    {
                        "name": "salon",
                        "in": "body",
                        "description": "Salon",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/Salon"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/SalonJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    },
                    "422": {
                        "description": "Validation is not passed",
                        "schema": {
                            "$ref": "#/definitions/ErrorsJSON"
                        }
                    }
                }
            }
        },
        "/v1/salons/{id}": {
            "get": {
                "tags": [
                    "V1",
                    "Salons",
                    "Implemented"
                ],
                "description": "Details of concrete `Salon`\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Salon",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of `Salon`",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/SalonJSON"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "V1",
                    "Salons",
                    "Implemented"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "salon",
                        "in": "body",
                        "description": "Salon",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/Salon"
                                }
                            }
                        }
                    }
                ],
                "description": "Update `Salon`",
                "responses": {
                    "200": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/SalonJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    },
                    "422": {
                        "description": "Validation is not passed",
                        "schema": {
                            "$ref": "#/definitions/ErrorsJSON"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "V1",
                    "Salons",
                    "Implemented"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "type": "string"
                    },
                    {
                        "name": "salon",
                        "in": "body",
                        "description": "Salon",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/Salon"
                                }
                            }
                        }
                    }
                ],
                "description": "Update `Salon`",
                "responses": {
                    "200": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/SalonJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    },
                    "422": {
                        "description": "Validation is not passed",
                        "schema": {
                            "$ref": "#/definitions/ErrorsJSON"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "V1",
                    "Salons",
                    "Implemented"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "type": "string"
                    }
                ],
                "description": "Delete salon",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/SalonJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/salons/{id}/book": {
            "post": {
                "tags": [
                    "V1",
                    "Salons"
                ],
                "description": "Book list of selected `Services`\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "services": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "stylist_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking successfuly created",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/salons/{id}/set_image": {
            "patch": {
                "tags": [
                    "V1",
                    "Implemented",
                    "Salons"
                ],
                "description": "Set image of `Salon`",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "File",
                        "type": "file",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of `Salon`",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/SalonJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/salons/{id}/set_hours": {
            "patch": {
                "tags": [
                    "V1",
                    "Implemented",
                    "Salons"
                ],
                "description": "Set working hours for `Salon`",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "type": "string"
                    },
                    {
                        "name": "hours",
                        "in": "body",
                        "description": "hours",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "hours": {
                                    "$ref": "#/definitions/SalonHours"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of `Salon`",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "salon": {
                                    "$ref": "#/definitions/SalonJSON"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        },
        "/v1/feedback": {
            "post": {
                "tags": [
                    "V1"
                ],
                "description": "Send feedback\n",
                "parameters": [
                    {
                        "name": "message",
                        "in": "formData",
                        "required": true,
                        "description": "Message sended from feedback text box",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback successfully created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "Feedback successfully created\n"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/Unauthorized"
                    }
                }
            }
        }
    },
    "definitions": {
        "Image": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "OpeningHours": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "number",
                    "format": "integer",
                    "default": 0
                },
                "to": {
                    "type": "number",
                    "format": "integer",
                    "default": 24
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "SalonJSON": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "number",
                            "format": "integer",
                            "default": 1
                        }
                    }
                },
                {
                    "$ref": "#/definitions/Salon"
                },
                {
                    "$ref": "#/definitions/SalonRelations"
                },
                {
                    "type": "object",
                    "properties": {
                        "hours": {
                            "$ref": "#/definitions/SalonHours"
                        }
                    }
                }
            ]
        },
        "Salon": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "address_1": {
                    "type": "string"
                },
                "address_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                },
                "is_home": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "instagram": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "lng": {
                    "type": "number",
                    "format": "float"
                },
                "lat": {
                    "type": "number",
                    "format": "float"
                },
                "min_price": {
                    "type": "integer"
                },
                "image_urls": {
                    "type": "object",
                    "properties": {
                        "thumb": {
                            "type": "string"
                        },
                        "medium": {
                            "type": "string"
                        },
                        "large": {
                            "type": "string"
                        },
                        "original": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "SalonHours": {
            "type": "object",
            "properties": {
                "mon": {
                    "$ref": "#/definitions/OpeningHours"
                },
                "tue": {
                    "$ref": "#/definitions/OpeningHours"
                },
                "wed": {
                    "$ref": "#/definitions/OpeningHours"
                },
                "thu": {
                    "$ref": "#/definitions/OpeningHours"
                },
                "fri": {
                    "$ref": "#/definitions/OpeningHours"
                },
                "sat": {
                    "$ref": "#/definitions/OpeningHours"
                },
                "sun": {
                    "$ref": "#/definitions/OpeningHours"
                }
            }
        },
        "SalonRelations": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "default": "services"
                            },
                            "id": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "is_home": {
                    "type": "boolean"
                },
                "duration": {
                    "type": "integer"
                },
                "price": {
                    "type": "string"
                },
                "category_name": {
                    "type": "string"
                }
            }
        },
        "Stylist": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "appointments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Appointment"
                    }
                }
            }
        },
        "Appointment": {
            "type": "object",
            "properties": {
                "starts_at": {
                    "type": "string",
                    "format": "dateTime"
                },
                "deposit": {
                    "type": "string"
                }
            }
        },
        "ErrorsJSON": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "responses": {
        "Unauthorized": {
            "description": "You are not authorized for this kind of action. \nSend `X-User-Token` and `X-User-Phone` headers to authorize.\n",
            "schema": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "default": "You need to sign in or sign up before continuing."
                    }
                }
            }
        }
    }
}